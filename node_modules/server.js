const communication = require('communication')
const server = {
	getGames: (client, games) =>
	{
		const payload = {
			"method": "getGames",
			"games" : games
		}
		communication.send(client, payload);			
	},
	localId: (clients, clientLocals, games, result) =>
	{
		// this is in case the socket is dropped, which is likely because people will background the 
		// browser to answer texts etc. 
		// the server issues a clientId but the client generates it's own guid as well. As soon as 
		// a connection is made, server will store a relationship so that on reconnect it can find
		// which game you were playing before and reconnect you to it seamlessly
		const clientId = result.clientId; 
		const localId = result.localId;	
		if (clientLocals[localId]) { // move this (And everything else tbh) into function when it works
			let oldClient = clients[clientLocals[localId]];
			let newClient = clients[clientId];
			try {
				newClient.currentGameInfo = JSON.parse(JSON.stringify(oldClient.currentGameInfo));
				let gameId = newClient.currentGameInfo.gameId;
				let game = games[gameId];
				for (let x = 0; x < game.clients.length; x++)
				{
					if (game.clients[x].clientId == clientLocals[localId])
						game.clients.splice(x, 1);
				}
				game.clients.push({
					"clientId" : clientId,		
				});	
				clientLocals[localId] = clientId;
				if (game.hostId == oldClient.currentGameInfo.clientId)
				{	
					game.hostId = clientId;
					game.hostNick = clients[clientId].currentGameInfo.nick
					clients[clientLocals[localId]].currentGameInfo.clientId = clientId;
				}
				for (let x = 0; x < game.answers.length; x++)
				{
					if (game.answers[x].owner == clientLocals[localId])
						game.answers[x].owner = clientId;
				}
				const payload = {
					"method" : "join",
					"game" : game
				}
				communication.send(clients[clientId], payload)					
			} catch {
				console.log("something went really wrong on a reconnect attempt, trying to recover gracefully")
				clientLocals[localId] = clientId;
			}		
		} else {
			clientLocals[localId] = clientId;
		}		
	}
}
module.exports = server